E2012 = Eligible.2012,
E2010 = Eligible.2010,
E2008 = Eligible.2008,
Y2012 = Young.in.2012,
Y2010 = Young.in.2010,
Y2008 = Young.in.2008,
Voter.Category = Voter.Category,
VoterType = type,
VoterType.ID2 = ID,
Control = control,
Post = post,
Flyer = flyer,
LowProp = LOWPROP,
Geo.City = city,
Geo.Zip = zip,
Geo.District = U_S__CONGRESS,
Byear = byear)
# Add age of the voters in 2014
lws_data2$AgeIn2014 <- 2000-as.integer(lws_data2$Byear) + 14
#str(lws_data2)
#summary(lws_data2)
#xtabs(~Control+V2014,data=lws_data2)
#xtabs(~Post+V2014,data=lws_data2)
#xtabs(~Flyer+V2014,data=lws_data2)
#xtabs(~VoterType+V2014,data=lws_data2)
# check a few fields to see if they are contributing new data
#temp <- subset(VoterPopulation, !VoterType.ID == VoterType.ID2)
#temp <- subset(VoterPopulation, !LowProp ==1)
#temp <- subset(VoterPopulation, !Voter.Status == "A")
# resquence the fields so related fields are easier to compare
VoterPopulation <- subset(lws_data2, select = c(
Control,
Flyer,
Post,
V2014,
VCnt08to12,
Young18to29,
AgeIn2014,
#  Voter.Status, always A so throw out
Hispanic,
Geo.Zip,
V2012,
V2010,
V2008,
E2012,
E2010,
E2008,
Y2012,
Y2010,
Y2008,
Geo.District,
#  Voter.Status, always A so throw out
#  VoterType,     remove and recalculate based on coded fields
#  V.Hispanic.Status,    remove and recalculate based on coded fields
#  Voter.Category,   remove and recalculate based on coded fields
#  VoterType.ID2,   appears to be duplicate data
Byear,
Voter.ID,
Geo.City
#  LowProp       Low propensity voting is always 1 so throw it out
))
str(VoterPopulation)
CountOfFlyer <- length(which(VoterPopulation$Flyer==1))
CountOfFlyerVoted <- length(which(VoterPopulation$Flyer==1 & VoterPopulation$V2014==1))
CountOfPoster <- length(which(VoterPopulation$Post==1))
CountOfPosterVoted <- length(which(VoterPopulation$Post==1 & VoterPopulation$V2014==1))
CountOfControl <- length(which(VoterPopulation$Control==1))
CountOfControlVoted <- length(which(VoterPopulation$Control==1 & VoterPopulation$V2014==1))
# create a NewType to make it easier to read
VoterPopulation$AgeType <- ifelse(VoterPopulation$Young18to29 == 1, c("Yng"),c("Old"))
VoterPopulation$HispanicType <- ifelse(VoterPopulation$Hispanic == 1, c("Hispanic"),c("NonHisp"))
#VoterPopulation$HispanicType <- ifelse(VoterPopulation$Hispanic == 1, c("Hispanic"),c("NonHisp"))
VoterPopulation$Treatment <- ifelse(VoterPopulation$Control == 1, c("Control"),
ifelse(VoterPopulation$Flyer == 1,c("Flyer"),
ifelse(VoterPopulation$Post == 1, c("Postcard"), c("All_LowProp"))))
#VoterPopulation$Treatment <- VoterPopulation$Treatment[is.na(VoterPopulation$Treatment)] <- c("AllVoters"))
VoterPopulation$Treatment[is.na(VoterPopulation$Treatment)] <- c("AllVoters")
VoterPopulation$Population <- ifelse(VoterPopulation$Treatment =="All_LowProp",c("All_LowProp"), "SampleGroup" )
VoterPopulation$VoterType <- paste(VoterPopulation$AgeType,VoterPopulation$HispanicType, sep = " ")
VoterPopulation$V2014Status <- ifelse(VoterPopulation$V2014==1,c("VoteIn2014"), c("DidntVote"))
VoterPopulation$VoterTypeStatus <- paste(VoterPopulation$V2014Status,VoterPopulation$AgeType,VoterPopulation$HispanicType, sep = " ")
VoterPopulation$VoterHistory <- ifelse(VoterPopulation$VCnt08to12==1,"LikelyVoter", "UnlikelyVoter")
head(VoterPopulation, n = 5)
#Played with factors, seemed to cause too many wrong data type errors
#VoterPopulation$NewType <- as.factor(VoterPopulation$NewType)
#VoterPopulation$Treatment <- as.factor(VoterPopulation$Treatment)
#VoterPopulation$AgeType <- as.factor(VoterPopulation$AgeType)
#VoterPopulation$HispanicType <- as.factor(VoterPopulation$HispanicType)
##VoterPopulation$Geo.zip <- as.factor(VoterPopulation$Geo.zip)
#VoterPopulation$Control <- as.factor(VoterPopulation$Control)
#VoterPopulation$Flyer <- as.factor(VoterPopulation$Flyer)
#VoterPopulation$Post <- as.factor(VoterPopulation$Post)
#VoterPopulation$V2014 <- as.factor(VoterPopulation$V2014)
#str(VoterPopulation)
#write.csv(VoterPopulation,file="VoterPopulation.csv")
#levels(VoterPopulation)
# take a smaller sample if needed
#tiny <- VoterPopulation[sample(1:nrow(VoterPopulation),500,replace = FALSE),]
tiny <- VoterPopulation
str(tiny)
#x <- tiny[1:20]
#y <- tiny[4:5]
#cor(x,y)
#cor(x,y,use="everything", method =c("pearson","kendall","Spearman"))
#attach(VoterPopulation)
#agefit <- lm(V2014~V2012)
#detach()
#summary(agefit)
library("plyr")
library("dplyr")
#library("GGally")
#library("descr")
#library("readr")
library("psych")
library("reshape2")
#install.packages("sqldf")
#library("sqldf")
#library("data.table")
library("tigerstats")
library("reshape")
library("stats")
library("ggplot2")
library("data.table")
library("Rmisc")
options(digits=4)
setwd("c:/Users/anobs/Documents/GitHub/Unit9VoterStudy/Analysis")
getwd()
lws_data <- read.csv("lwv_data.csv",skip=0, strip.white = TRUE,blank.lines.skip = TRUE, stringsAsFactors = FALSE)
#lws_data <- fread("lwv_data.csv", stringsAsFactors = FALSE,verbose=TRUE)
str(lws_data)
summary(lws_data)
# One record with NA byear, set this to 1990 to sync with the other date fields in the record
lws_data$byear[is.na(lws_data$byear)] <- 1990
# Set the NA values in these fields to 0, NA's were causing problems in later steps
lws_data$control[is.na(lws_data$control)] <- 0
lws_data$post[is.na(lws_data$post)] <- 0
lws_data$flyer[is.na(lws_data$flyer)] <- 0
#unique(lws_data$city, lws_data$zip)
#One record in Zip 75089 (Rowlet) was missing the cityname so fix this
lws_data$city[lws_data$city==c("")] <- c("ROWLET")
lws_data %>% select(city,zip) %>% distinct
#xtabs(~city+zip,data=lws_data)
# Rename the columns so they make more sense when browsing
lws_data2 <- dplyr::rename(lws_data,
V2014 = VOTED2014,
V.Hispanic.Status = Young.Hispanic.Status,
Voter.ID = ID.Number,
Voter.Status = Voter.Status,
V2012 = Voted.11.2012,
V2010 = Voted.Gen..Elec..09.2010,
V2008 = Voted.Gen..Elec..07.2008,
VCnt08to12 = Number.General.Elections,
Hispanic = Hispanic.Surname,
Young18to29 = Young.Voter,
E2012 = Eligible.2012,
E2010 = Eligible.2010,
E2008 = Eligible.2008,
Y2012 = Young.in.2012,
Y2010 = Young.in.2010,
Y2008 = Young.in.2008,
Voter.Category = Voter.Category,
VoterType = type,
VoterType.ID2 = ID,
Control = control,
Post = post,
Flyer = flyer,
LowProp = LOWPROP,
Geo.City = city,
Geo.Zip = zip,
Geo.District = U_S__CONGRESS,
Byear = byear)
# Add age of the voters in 2014
lws_data2$AgeIn2014 <- 2000-as.integer(lws_data2$Byear) + 14
#str(lws_data2)
#summary(lws_data2)
#xtabs(~Control+V2014,data=lws_data2)
#xtabs(~Post+V2014,data=lws_data2)
#xtabs(~Flyer+V2014,data=lws_data2)
#xtabs(~VoterType+V2014,data=lws_data2)
# check a few fields to see if they are contributing new data
#temp <- subset(VoterPopulation, !VoterType.ID == VoterType.ID2)
#temp <- subset(VoterPopulation, !LowProp ==1)
#temp <- subset(VoterPopulation, !Voter.Status == "A")
lws_data <- arrange(lws_data,Voter.ID)
lws_data3 <- arrange(lws_data2,Voter.ID)
lws_data3 <- mutate(lws_data3,counter=counter+1,votes=votes+V2014,cumpercent=votes/counter)
plot(cumsum(LowProp),cumsum(V2014)/cumsum(LowProp))
lws_data3 <- arrange(lws_data2,Voter.ID)
attach(lws_data3)
plot(cumsum(LowProp),cumsum(V2014)/cumsum(LowProp))
detach()
library("plyr")
library("dplyr")
#library("GGally")
#library("descr")
#library("readr")
library("psych")
library("reshape2")
#install.packages("sqldf")
#library("sqldf")
#library("data.table")
library("tigerstats")
library("reshape")
library("stats")
library("ggplot2")
library("data.table")
library("Rmisc")
options(digits=4)
setwd("c:/Users/anobs/Documents/GitHub/Unit9VoterStudy/Analysis")
getwd()
lws_data <- read.csv("lwv_data.csv",skip=0, strip.white = TRUE,blank.lines.skip = TRUE, stringsAsFactors = FALSE)
#lws_data <- fread("lwv_data.csv", stringsAsFactors = FALSE,verbose=TRUE)
str(lws_data)
summary(lws_data)
# One record with NA byear, set this to 1990 to sync with the other date fields in the record
lws_data$byear[is.na(lws_data$byear)] <- 1990
# Set the NA values in these fields to 0, NA's were causing problems in later steps
lws_data$control[is.na(lws_data$control)] <- 0
lws_data$post[is.na(lws_data$post)] <- 0
lws_data$flyer[is.na(lws_data$flyer)] <- 0
#unique(lws_data$city, lws_data$zip)
#One record in Zip 75089 (Rowlet) was missing the cityname so fix this
lws_data$city[lws_data$city==c("")] <- c("ROWLET")
lws_data %>% select(city,zip) %>% distinct
#xtabs(~city+zip,data=lws_data)
# Rename the columns so they make more sense when browsing
lws_data2 <- dplyr::rename(lws_data,
V2014 = VOTED2014,
V.Hispanic.Status = Young.Hispanic.Status,
Voter.ID = ID.Number,
Voter.Status = Voter.Status,
V2012 = Voted.11.2012,
V2010 = Voted.Gen..Elec..09.2010,
V2008 = Voted.Gen..Elec..07.2008,
VCnt08to12 = Number.General.Elections,
Hispanic = Hispanic.Surname,
Young18to29 = Young.Voter,
E2012 = Eligible.2012,
E2010 = Eligible.2010,
E2008 = Eligible.2008,
Y2012 = Young.in.2012,
Y2010 = Young.in.2010,
Y2008 = Young.in.2008,
Voter.Category = Voter.Category,
VoterType = type,
VoterType.ID2 = ID,
Control = control,
Post = post,
Flyer = flyer,
LowProp = LOWPROP,
Geo.City = city,
Geo.Zip = zip,
Geo.District = U_S__CONGRESS,
Byear = byear)
# Add age of the voters in 2014
lws_data2$AgeIn2014 <- 2000-as.integer(lws_data2$Byear) + 14
#str(lws_data2)
#summary(lws_data2)
lws_data3 <- arrange(lws_data2,Voter.ID)
attach(lws_data3)
plot(cumsum(LowProp),cumsum(V2014)/cumsum(LowProp))
detach()
VoterPopulation <- subset(lws_data2, select = c(
Control,
Flyer,
Post,
V2014,
VCnt08to12,
Young18to29,
AgeIn2014,
#  Voter.Status, always A so throw out
Hispanic,
Geo.Zip,
V2012,
V2010,
V2008,
E2012,
E2010,
E2008,
Y2012,
Y2010,
Y2008,
Geo.District,
#  Voter.Status, always A so throw out
#  VoterType,     remove and recalculate based on coded fields
#  V.Hispanic.Status,    remove and recalculate based on coded fields
#  Voter.Category,   remove and recalculate based on coded fields
#  VoterType.ID2,   appears to be duplicate data
Byear,
Voter.ID,
Geo.City
#  LowProp       Low propensity voting is always 1 so throw it out
))
str(VoterPopulation)
CountOfFlyer <- length(which(VoterPopulation$Flyer==1))
CountOfFlyerVoted <- length(which(VoterPopulation$Flyer==1 & VoterPopulation$V2014==1))
CountOfPoster <- length(which(VoterPopulation$Post==1))
CountOfPosterVoted <- length(which(VoterPopulation$Post==1 & VoterPopulation$V2014==1))
CountOfControl <- length(which(VoterPopulation$Control==1))
CountOfControlVoted <- length(which(VoterPopulation$Control==1 & VoterPopulation$V2014==1))
# create a NewType to make it easier to read
VoterPopulation$AgeType <- ifelse(VoterPopulation$Young18to29 == 1, c("Yng"),c("Old"))
VoterPopulation$HispanicType <- ifelse(VoterPopulation$Hispanic == 1, c("Hispanic"),c("NonHisp"))
#VoterPopulation$HispanicType <- ifelse(VoterPopulation$Hispanic == 1, c("Hispanic"),c("NonHisp"))
VoterPopulation$Treatment <- ifelse(VoterPopulation$Control == 1, c("Control"),
ifelse(VoterPopulation$Flyer == 1,c("Flyer"),
ifelse(VoterPopulation$Post == 1, c("Postcard"), c("All_LowProp"))))
#VoterPopulation$Treatment <- VoterPopulation$Treatment[is.na(VoterPopulation$Treatment)] <- c("AllVoters"))
VoterPopulation$Treatment[is.na(VoterPopulation$Treatment)] <- c("AllVoters")
VoterPopulation$Population <- ifelse(VoterPopulation$Treatment =="All_LowProp",c("All_LowProp"), "SampleGroup" )
VoterPopulation$VoterType <- paste(VoterPopulation$AgeType,VoterPopulation$HispanicType, sep = " ")
VoterPopulation$V2014Status <- ifelse(VoterPopulation$V2014==1,c("VoteIn2014"), c("DidntVote"))
VoterPopulation$VoterTypeStatus <- paste(VoterPopulation$V2014Status,VoterPopulation$AgeType,VoterPopulation$HispanicType, sep = " ")
VoterPopulation$VoterHistory <- ifelse(VoterPopulation$VCnt08to12==1,"LikelyVoter", "UnlikelyVoter")
head(VoterPopulation, n = 5)
samplepopulation <- VoterPopulation[VoterPopulation$Population=="SampleGroup"]
samplepopulation <- VoterPopulation[,VoterPopulation$Population=="SampleGroup"]
samplepopulation <- VoterPopulation[VoterPopulation$Population=="SampleGroup",]
str(samplepopulation)
arrange(samplepopulation,voter.ID)
attach(samplepopulation)
plot(cumsum(LowProp),cumsum(V2014)/cumsum(LowProp))
detach()
VoterPopulation <- subset(lws_data2, select = c(
Control,
Flyer,
Post,
V2014,
VCnt08to12,
Young18to29,
AgeIn2014,
#  Voter.Status, always A so throw out
Hispanic,
Geo.Zip,
V2012,
V2010,
V2008,
E2012,
E2010,
E2008,
Y2012,
Y2010,
Y2008,
Geo.District,
#  Voter.Status, always A so throw out
#  VoterType,     remove and recalculate based on coded fields
#  V.Hispanic.Status,    remove and recalculate based on coded fields
#  Voter.Category,   remove and recalculate based on coded fields
#  VoterType.ID2,   appears to be duplicate data
Byear,
Voter.ID,
Geo.City
LowProp       Low propensity voting is always 1 so throw it out
))
str(VoterPopulation)
CountOfFlyer <- length(which(VoterPopulation$Flyer==1))
CountOfFlyerVoted <- length(which(VoterPopulation$Flyer==1 & VoterPopulation$V2014==1))
CountOfPoster <- length(which(VoterPopulation$Post==1))
CountOfPosterVoted <- length(which(VoterPopulation$Post==1 & VoterPopulation$V2014==1))
CountOfControl <- length(which(VoterPopulation$Control==1))
CountOfControlVoted <- length(which(VoterPopulation$Control==1 & VoterPopulation$V2014==1))
# create a NewType to make it easier to read
VoterPopulation$AgeType <- ifelse(VoterPopulation$Young18to29 == 1, c("Yng"),c("Old"))
VoterPopulation$HispanicType <- ifelse(VoterPopulation$Hispanic == 1, c("Hispanic"),c("NonHisp"))
#VoterPopulation$HispanicType <- ifelse(VoterPopulation$Hispanic == 1, c("Hispanic"),c("NonHisp"))
VoterPopulation$Treatment <- ifelse(VoterPopulation$Control == 1, c("Control"),
ifelse(VoterPopulation$Flyer == 1,c("Flyer"),
ifelse(VoterPopulation$Post == 1, c("Postcard"), c("All_LowProp"))))
#VoterPopulation$Treatment <- VoterPopulation$Treatment[is.na(VoterPopulation$Treatment)] <- c("AllVoters"))
VoterPopulation$Treatment[is.na(VoterPopulation$Treatment)] <- c("AllVoters")
VoterPopulation$Population <- ifelse(VoterPopulation$Treatment =="All_LowProp",c("All_LowProp"), "SampleGroup" )
VoterPopulation$VoterType <- paste(VoterPopulation$AgeType,VoterPopulation$HispanicType, sep = " ")
VoterPopulation$V2014Status <- ifelse(VoterPopulation$V2014==1,c("VoteIn2014"), c("DidntVote"))
VoterPopulation$VoterTypeStatus <- paste(VoterPopulation$V2014Status,VoterPopulation$AgeType,VoterPopulation$HispanicType, sep = " ")
VoterPopulation$VoterHistory <- ifelse(VoterPopulation$VCnt08to12==1,"LikelyVoter", "UnlikelyVoter")
head(VoterPopulation, n = 5)
#Played with factors, seemed to cause too many wrong data type errors
#VoterPopulation$NewType <- as.factor(VoterPopulation$NewType)
#VoterPopulation$Treatment <- as.factor(VoterPopulation$Treatment)
#VoterPopulation$AgeType <- as.factor(VoterPopulation$AgeType)
#VoterPopulation$HispanicType <- as.factor(VoterPopulation$HispanicType)
##VoterPopulation$Geo.zip <- as.factor(VoterPopulation$Geo.zip)
#VoterPopulation$Control <- as.factor(VoterPopulation$Control)
#VoterPopulation$Flyer <- as.factor(VoterPopulation$Flyer)
#VoterPopulation$Post <- as.factor(VoterPopulation$Post)
#VoterPopulation$V2014 <- as.factor(VoterPopulation$V2014)
#str(VoterPopulation)
#write.csv(VoterPopulation,file="VoterPopulation.csv")
samplepopulation <- VoterPopulation[VoterPopulation$Population=="SampleGroup",]
str(samplepopulation)
arrange(samplepopulation,voter.ID)
arrange(samplepopulation,Voter.ID)
attach(samplepopulation)
plot(cumsum(LowProp),cumsum(V2014)/cumsum(LowProp))
VoterPopulation <- subset(lws_data2, select = c(
Control,
Flyer,
Post,
V2014,
VCnt08to12,
Young18to29,
AgeIn2014,
#  Voter.Status, always A so throw out
Hispanic,
Geo.Zip,
V2012,
V2010,
V2008,
E2012,
E2010,
E2008,
Y2012,
Y2010,
Y2008,
Geo.District,
#  Voter.Status, always A so throw out
#  VoterType,     remove and recalculate based on coded fields
#  V.Hispanic.Status,    remove and recalculate based on coded fields
#  Voter.Category,   remove and recalculate based on coded fields
#  VoterType.ID2,   appears to be duplicate data
Byear,
Voter.ID,
Geo.City,
LowProp       Low propensity voting is always 1 so throw it out
))
str(VoterPopulation)
CountOfFlyer <- length(which(VoterPopulation$Flyer==1))
CountOfFlyerVoted <- length(which(VoterPopulation$Flyer==1 & VoterPopulation$V2014==1))
CountOfPoster <- length(which(VoterPopulation$Post==1))
CountOfPosterVoted <- length(which(VoterPopulation$Post==1 & VoterPopulation$V2014==1))
CountOfControl <- length(which(VoterPopulation$Control==1))
CountOfControlVoted <- length(which(VoterPopulation$Control==1 & VoterPopulation$V2014==1))
# create a NewType to make it easier to read
VoterPopulation$AgeType <- ifelse(VoterPopulation$Young18to29 == 1, c("Yng"),c("Old"))
VoterPopulation$HispanicType <- ifelse(VoterPopulation$Hispanic == 1, c("Hispanic"),c("NonHisp"))
#VoterPopulation$HispanicType <- ifelse(VoterPopulation$Hispanic == 1, c("Hispanic"),c("NonHisp"))
VoterPopulation$Treatment <- ifelse(VoterPopulation$Control == 1, c("Control"),
ifelse(VoterPopulation$Flyer == 1,c("Flyer"),
ifelse(VoterPopulation$Post == 1, c("Postcard"), c("All_LowProp"))))
#VoterPopulation$Treatment <- VoterPopulation$Treatment[is.na(VoterPopulation$Treatment)] <- c("AllVoters"))
VoterPopulation$Treatment[is.na(VoterPopulation$Treatment)] <- c("AllVoters")
VoterPopulation$Population <- ifelse(VoterPopulation$Treatment =="All_LowProp",c("All_LowProp"), "SampleGroup" )
VoterPopulation$VoterType <- paste(VoterPopulation$AgeType,VoterPopulation$HispanicType, sep = " ")
VoterPopulation$V2014Status <- ifelse(VoterPopulation$V2014==1,c("VoteIn2014"), c("DidntVote"))
VoterPopulation$VoterTypeStatus <- paste(VoterPopulation$V2014Status,VoterPopulation$AgeType,VoterPopulation$HispanicType, sep = " ")
VoterPopulation$VoterHistory <- ifelse(VoterPopulation$VCnt08to12==1,"LikelyVoter", "UnlikelyVoter")
head(VoterPopulation, n = 5)
samplepopulation <- VoterPopulation[VoterPopulation$Population=="SampleGroup",]
str(samplepopulation)
VoterPopulation <- subset(lws_data2, select = c(
Control,
Flyer,
Post,
V2014,
VCnt08to12,
Young18to29,
AgeIn2014,
#  Voter.Status, always A so throw out
Hispanic,
Geo.Zip,
V2012,
V2010,
V2008,
E2012,
E2010,
E2008,
Y2012,
Y2010,
Y2008,
Geo.District,
#  Voter.Status, always A so throw out
#  VoterType,     remove and recalculate based on coded fields
#  V.Hispanic.Status,    remove and recalculate based on coded fields
#  Voter.Category,   remove and recalculate based on coded fields
#  VoterType.ID2,   appears to be duplicate data
Byear,
Voter.ID,
Geo.City,
LowProp    #   Low propensity voting is always 1 so throw it out
))
str(VoterPopulation)
CountOfFlyer <- length(which(VoterPopulation$Flyer==1))
CountOfFlyerVoted <- length(which(VoterPopulation$Flyer==1 & VoterPopulation$V2014==1))
CountOfPoster <- length(which(VoterPopulation$Post==1))
CountOfPosterVoted <- length(which(VoterPopulation$Post==1 & VoterPopulation$V2014==1))
CountOfControl <- length(which(VoterPopulation$Control==1))
CountOfControlVoted <- length(which(VoterPopulation$Control==1 & VoterPopulation$V2014==1))
# create a NewType to make it easier to read
VoterPopulation$AgeType <- ifelse(VoterPopulation$Young18to29 == 1, c("Yng"),c("Old"))
VoterPopulation$HispanicType <- ifelse(VoterPopulation$Hispanic == 1, c("Hispanic"),c("NonHisp"))
#VoterPopulation$HispanicType <- ifelse(VoterPopulation$Hispanic == 1, c("Hispanic"),c("NonHisp"))
VoterPopulation$Treatment <- ifelse(VoterPopulation$Control == 1, c("Control"),
ifelse(VoterPopulation$Flyer == 1,c("Flyer"),
ifelse(VoterPopulation$Post == 1, c("Postcard"), c("All_LowProp"))))
#VoterPopulation$Treatment <- VoterPopulation$Treatment[is.na(VoterPopulation$Treatment)] <- c("AllVoters"))
VoterPopulation$Treatment[is.na(VoterPopulation$Treatment)] <- c("AllVoters")
VoterPopulation$Population <- ifelse(VoterPopulation$Treatment =="All_LowProp",c("All_LowProp"), "SampleGroup" )
VoterPopulation$VoterType <- paste(VoterPopulation$AgeType,VoterPopulation$HispanicType, sep = " ")
VoterPopulation$V2014Status <- ifelse(VoterPopulation$V2014==1,c("VoteIn2014"), c("DidntVote"))
VoterPopulation$VoterTypeStatus <- paste(VoterPopulation$V2014Status,VoterPopulation$AgeType,VoterPopulation$HispanicType, sep = " ")
VoterPopulation$VoterHistory <- ifelse(VoterPopulation$VCnt08to12==1,"LikelyVoter", "UnlikelyVoter")
head(VoterPopulation, n = 5)
samplepopulation <- VoterPopulation[VoterPopulation$Population=="SampleGroup",]
str(samplepopulation)
arrange(samplepopulation,Voter.ID)
attach(samplepopulation)
plot(cumsum(LowProp),cumsum(V2014)/cumsum(LowProp))
detach()
attach(samplepopulation)
plot(cumsum(LowProp),cumsum(V2014)/cumsum(LowProp))
plot(cumsum(LowProp),V2014)
detach()
